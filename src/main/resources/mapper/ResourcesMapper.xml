<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.graduation.dao.ResourcesMapper">
  <resultMap id="BaseResultMap" type="com.example.graduation.pojo.Resources">
    <id column="resourcesId" jdbcType="INTEGER" property="resourcesId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resUrl" jdbcType="VARCHAR" property="resUrl" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="parentId" jdbcType="INTEGER" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resourcesId, name, resUrl, type, parentId, sort
  </sql>
  <select id="selectByExample" parameterType="com.example.graduation.pojo.ResourcesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_resources
    where resourcesId = #{resourcesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_resources
    where resourcesId = #{resourcesId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.graduation.pojo.Resources">
    insert into t_resources (resourcesId, name, resUrl, 
      type, parentId, sort
      )
    values (#{resourcesId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{resUrl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.graduation.pojo.Resources">
    insert into t_resources
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resourcesId != null">
        resourcesId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="resUrl != null">
        resUrl,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resourcesId != null">
        #{resourcesId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="resUrl != null">
        #{resUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.graduation.pojo.ResourcesExample" resultType="java.lang.Long">
    select count(*) from t_resources
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.graduation.pojo.Resources">
    update t_resources
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="resUrl != null">
        resUrl = #{resUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where resourcesId = #{resourcesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.graduation.pojo.Resources">
    update t_resources
    set name = #{name,jdbcType=VARCHAR},
      resUrl = #{resUrl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      parentId = #{parentId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where resourcesId = #{resourcesId,jdbcType=INTEGER}
  </update>
  <select id="loadUserResources" parameterType="java.util.HashMap" resultType="com.example.graduation.pojo.Resources">
    SELECT re.id,re.name,re.parentId,re.resUrl
    FROM resources re LEFT JOIN role_resources rr
    ON re.id = rr.resourcesId
    LEFT JOIN user_role ur
    ON rr.roleId =ur.roleId
    WHERE ur.userId=#{userid}
    <if test="type != null">
      AND re.type= #{type}
    </if>
    GROUP BY re.id
    ORDER BY re.sort ASC
  </select>
</mapper>